apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: iodv3-qa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-db
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-db
        configMap:
          name: postgres-init

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: iodv3-qa
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: iodv3-qa
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: iodv3-qa
data:
  init-db.sql: |
    CREATE DATABASE iodv3_accounts;
    CREATE DATABASE iodv3_blog;
    
    CREATE USER accounts_user WITH PASSWORD 'accounts_password';
    CREATE USER blog_user WITH PASSWORD 'blog_password';
    
    GRANT ALL PRIVILEGES ON DATABASE iodv3_accounts TO accounts_user;
    GRANT ALL PRIVILEGES ON DATABASE iodv3_blog TO blog_user;
