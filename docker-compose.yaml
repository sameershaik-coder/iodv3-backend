services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  accounts-service:
    build: 
      context: .
      dockerfile: services/accounts/Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/iodv3_accounts
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/accounts:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    command: ["poetry", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  blog-service:
    build: 
      context: .
      dockerfile: services/blog/Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/iodv3_blog
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key
      - ACCOUNTS_SERVICE_URL=http://accounts-service:8001
    ports:
      - "8002:8002"
    depends_on:
      accounts-service:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/blog:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    command: ["poetry", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]

  api-gateway:
    build: 
      context: .
      dockerfile: gateway/Dockerfile
    environment:
      - ACCOUNTS_SERVICE_URL=http://accounts-service:8001
      - BLOG_SERVICE_URL=http://blog-service:8002
      - SECRET_KEY=dev-secret-key
    ports:
      - "8000:8000"
    depends_on:
      accounts-service:
        condition: service_started
      blog-service:
        condition: service_started
    volumes:
      - ./gateway:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    command: ["poetry", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data:
  redis_data:
